{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\viliu\\\\OneDrive\\\\Desktop\\\\Tinklai\\\\frontend\\\\src\\\\components\\\\form\\\\userRegisterForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { registerUser } from '../../api/authApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserRegisterForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    epastas: '',\n    slaptazodis: '',\n    vardas: '',\n    pavarde: ''\n  });\n  const [message, setMessage] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const data = await registerUser({\n        ...formData,\n        role_id: 2\n      });\n      setMessage(data.message);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Registration failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"epastas\",\n        placeholder: \"Email\",\n        value: formData.epastas,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"slaptazodis\",\n        placeholder: \"Password\",\n        value: formData.slaptazodis,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"vardas\",\n        placeholder: \"First Name\",\n        value: formData.vardas,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"pavarde\",\n        placeholder: \"Last Name\",\n        value: formData.pavarde,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(UserRegisterForm, \"hsL/XzOotri5sLbyecSzqGVYdPg=\");\n_c = UserRegisterForm;\nexport default UserRegisterForm;\nvar _c;\n$RefreshReg$(_c, \"UserRegisterForm\");","map":{"version":3,"names":["React","useState","registerUser","jsxDEV","_jsxDEV","UserRegisterForm","_s","formData","setFormData","epastas","slaptazodis","vardas","pavarde","message","setMessage","handleChange","e","target","name","value","handleSubmit","preventDefault","data","role_id","error","_error$response","_error$response$data","response","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/viliu/OneDrive/Desktop/Tinklai/frontend/src/components/form/userRegisterForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { registerUser } from '../../api/authApi';\r\n\r\nconst UserRegisterForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    epastas: '',\r\n    slaptazodis: '',\r\n    vardas: '',\r\n    pavarde: ''\r\n  });\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const data = await registerUser({ ...formData, role_id: 2 });\r\n      setMessage(data.message);\r\n    } catch (error) {\r\n      setMessage(error.response?.data?.error || 'Registration failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {message && <p>{message}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" name=\"epastas\" placeholder=\"Email\" value={formData.epastas} onChange={handleChange} required />\r\n        <input type=\"password\" name=\"slaptazodis\" placeholder=\"Password\" value={formData.slaptazodis} onChange={handleChange} required />\r\n        <input type=\"text\" name=\"vardas\" placeholder=\"First Name\" value={formData.vardas} onChange={handleChange} required />\r\n        <input type=\"text\" name=\"pavarde\" placeholder=\"Last Name\" value={formData.pavarde} onChange={handleChange} required />\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserRegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}