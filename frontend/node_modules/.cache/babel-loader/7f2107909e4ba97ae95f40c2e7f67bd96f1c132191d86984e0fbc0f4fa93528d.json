{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\viliu\\\\OneDrive\\\\Desktop\\\\Tinklai\\\\frontend\\\\src\\\\pages\\\\bookManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Table from '../components/table/table';\nimport BookPostForm from '../components/form/bookPostForm';\nimport { getBooks } from '../api/booksApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookManagement = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const fetchBooks = async () => {\n    try {\n      const booksData = await getBooks();\n      setBooks(booksData);\n    } catch (error) {\n      console.error('Error fetching books:', error);\n    }\n  };\n  useEffect(() => {\n    fetchBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Book Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BookPostForm, {\n      onBookAdded: fetchBooks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      headers: ['title', 'author', 'genre', 'copies'],\n      data: books\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(BookManagement, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n_c = BookManagement;\nexport default BookManagement;\nvar _c;\n$RefreshReg$(_c, \"BookManagement\");","map":{"version":3,"names":["React","useState","useEffect","Table","BookPostForm","getBooks","jsxDEV","_jsxDEV","BookManagement","_s","books","setBooks","fetchBooks","booksData","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onBookAdded","headers","data","_c","$RefreshReg$"],"sources":["C:/Users/viliu/OneDrive/Desktop/Tinklai/frontend/src/pages/bookManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Table from '../components/table/table';\r\nimport BookPostForm from '../components/form/bookPostForm';\r\nimport { getBooks } from '../api/booksApi';\r\n\r\nconst BookManagement = () => {\r\n  const [books, setBooks] = useState([]);\r\n\r\n  const fetchBooks = async () => {\r\n    try {\r\n      const booksData = await getBooks();\r\n      setBooks(booksData);\r\n    } catch (error) {\r\n      console.error('Error fetching books:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBooks();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Book Management</h1>\r\n      <BookPostForm onBookAdded={fetchBooks} />\r\n      <Table headers={['title', 'author', 'genre', 'copies']} data={books} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookManagement;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,OAAOC,YAAY,MAAM,iCAAiC;AAC1D,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAAC,CAAC;MAClCM,QAAQ,CAACE,SAAS,CAAC;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBb,OAAA,CAACH,YAAY;MAACiB,WAAW,EAAET;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzCb,OAAA,CAACJ,KAAK;MAACmB,OAAO,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAE;MAACC,IAAI,EAAEb;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEV,CAAC;AAACX,EAAA,CAvBID,cAAc;AAAAgB,EAAA,GAAdhB,cAAc;AAyBpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}